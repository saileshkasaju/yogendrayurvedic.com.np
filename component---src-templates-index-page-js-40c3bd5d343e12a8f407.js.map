{"version":3,"file":"component---src-templates-index-page-js-40c3bd5d343e12a8f407.js","mappings":"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","sources":["webpack://gatsby-starter-netlify-cms/./src/components/BlogRoll.js","webpack://gatsby-starter-netlify-cms/./src/components/Content.js","webpack://gatsby-starter-netlify-cms/./src/components/Features.js","webpack://gatsby-starter-netlify-cms/./src/components/seo.js","webpack://gatsby-starter-netlify-cms/./src/templates/index-page.js"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link, graphql, StaticQuery } from 'gatsby';\nimport PreviewCompatibleImage from './PreviewCompatibleImage';\n\nclass BlogRoll extends React.Component {\n  render() {\n    const { data } = this.props;\n    const { edges: posts } = data.allMarkdownRemark;\n\n    return (\n      <div className=\"columns is-multiline\">\n        {posts &&\n          posts.map(({ node: post }) => (\n            <div className=\"is-parent column is-6\" key={post.id}>\n              <article\n                className={`blog-list-item tile is-child box notification ${\n                  post.frontmatter.featuredpost ? 'is-featured' : ''\n                }`}>\n                <header>\n                  {post.frontmatter.featuredimage ? (\n                    <div className=\"featured-thumbnail\">\n                      <PreviewCompatibleImage\n                        imageInfo={{\n                          image: post.frontmatter.featuredimage,\n                          alt: `featured image thumbnail for post ${post.frontmatter.title}`,\n                        }}\n                      />\n                    </div>\n                  ) : null}\n                  <p className=\"post-meta\">\n                    <Link className=\"title is-size-4\" to={post.fields.slug}>\n                      {post.frontmatter.title}\n                    </Link>\n                    <span> &bull; </span>\n                    <span className=\"subtitle is-size-5 is-block\">{post.frontmatter.date}</span>\n                  </p>\n                </header>\n                <p>\n                  {post.excerpt}\n                  <br />\n                  <br />\n                  <Link className=\"button\" to={post.fields.slug}>\n                    Keep Reading â†’\n                  </Link>\n                </p>\n              </article>\n            </div>\n          ))}\n      </div>\n    );\n  }\n}\n\nBlogRoll.propTypes = {\n  data: PropTypes.shape({\n    allMarkdownRemark: PropTypes.shape({\n      edges: PropTypes.array,\n    }),\n  }),\n};\n\nexport default () => (\n  <StaticQuery\n    query={graphql`\n      query BlogRollQuery {\n        allMarkdownRemark(\n          sort: { order: DESC, fields: [frontmatter___date] }\n          filter: { frontmatter: { templateKey: { eq: \"blog-post\" } } }\n        ) {\n          edges {\n            node {\n              excerpt(pruneLength: 400)\n              id\n              fields {\n                slug\n              }\n              frontmatter {\n                title\n                templateKey\n                date(formatString: \"MMMM DD, YYYY\")\n                featuredpost\n                featuredimage {\n                  childImageSharp {\n                    fluid(maxWidth: 120, quality: 100) {\n                      ...GatsbyImageSharpFluid\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    `}\n    render={(data, count) => <BlogRoll data={data} count={count} />}\n  />\n);\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nexport const HTMLContent = ({ content, className }) => (\n  <div className={className} dangerouslySetInnerHTML={{ __html: content }} />\n)\n\nconst Content = ({ content, className }) => (\n  <div className={className}>{content}</div>\n)\n\nContent.propTypes = {\n  content: PropTypes.node,\n  className: PropTypes.string,\n}\n\nHTMLContent.propTypes = Content.propTypes\n\nexport default Content\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport PreviewCompatibleImage from '../components/PreviewCompatibleImage'\n\nconst FeatureGrid = ({ gridItems }) => (\n  <div className=\"columns is-multiline\">\n    {gridItems.map(item => (\n      <div key={item.text} className=\"column is-6\">\n        <section className=\"section\">\n          <div className=\"has-text-centered\">\n            <div\n              style={{\n                width: '240px',\n                display: 'inline-block',\n              }}\n            >\n              <PreviewCompatibleImage imageInfo={item} />\n            </div>\n          </div>\n          <p>{item.text}</p>\n        </section>\n      </div>\n    ))}\n  </div>\n)\n\nFeatureGrid.propTypes = {\n  gridItems: PropTypes.arrayOf(\n    PropTypes.shape({\n      image: PropTypes.oneOfType([PropTypes.object, PropTypes.string]),\n      text: PropTypes.string,\n    })\n  ),\n}\n\nexport default FeatureGrid\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Helmet from 'react-helmet';\nimport { useStaticQuery, graphql } from 'gatsby';\n\nfunction SEO({ description, meta, title, image, lang }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n            siteUrl\n          }\n        }\n      }\n    `,\n  );\n\n  const metaDescription = description || site.siteMetadata.description;\n  // const webURL = withPrefix('/');\n  const webURL = site.siteMetadata.siteUrl;\n  const ogImage = `${webURL}${image || '/img/og-image.jpg'}`;\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        // fix html lang attribute\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          name: 'theme-color',\n          content: '#58B856',\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: 'og:type',\n          content: 'business.business',\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:image`,\n          content: ogImage,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary_large_image`,\n        },\n        {\n          name: `twitter:image:src`,\n          content: ogImage,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta)}>\n      <link rel=\"apple-touch-icon\" sizes=\"180x180\" href={`${webURL}/img/apple-touch-icon.png`} />\n      <link rel=\"icon\" type=\"image/png\" href={`${webURL}/img/favicon-32x32.png`} sizes=\"32x32\" />\n      <link rel=\"icon\" type=\"image/png\" href={`${webURL}/img/favicon-16x16.png`} sizes=\"16x16\" />\n      <link rel=\"mask-icon\" href={`${webURL}/img/safari-pinned-tab.svg`} color=\"#ff4400\" />\n    </Helmet>\n  );\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``,\n};\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n};\n\nexport default SEO;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link, graphql } from 'gatsby';\n\nimport Layout from '../components/Layout';\nimport Features from '../components/Features';\nimport BlogRoll from '../components/BlogRoll';\nimport { HTMLContent } from '../components/Content';\nimport SEO from '../components/seo';\n\nexport const IndexPageTemplate = ({\n  image,\n  title,\n  heading,\n  subheading,\n  mainpitch,\n  intro,\n  htmlContent,\n}) => {\n  return (\n    <div>\n      <SEO title=\"Home\" />\n      <div\n        className=\"full-width-image margin-top-0\"\n        style={{\n          backgroundImage: `url(${\n            !!image.childImageSharp ? image.childImageSharp.fluid.src : image\n          })`,\n          backgroundPosition: `top left`,\n          backgroundAttachment: `fixed`,\n        }}>\n        <div\n          style={{\n            display: 'flex',\n            height: '150px',\n            lineHeight: '1',\n            justifyContent: 'space-around',\n            alignItems: 'left',\n            flexDirection: 'column',\n          }}>\n          <h1\n            className=\"has-text-weight-bold is-size-3-mobile is-size-2-tablet is-size-1-widescreen\"\n            style={{\n              // boxShadow:\n              //   \"rgb(255, 68, 0) 0.5rem 0px 0px, rgb(255, 68, 0) -0.5rem 0px 0px\",\n              // backgroundColor: \"rgb(255, 68, 0)\",\n              color: 'white',\n              lineHeight: '1',\n              padding: '0.25em',\n            }}>\n            {title}\n          </h1>\n          <h3\n            className=\"has-text-weight-bold is-size-5-mobile is-size-5-tablet is-size-4-widescreen\"\n            style={{\n              // boxShadow:\n              //   \"rgb(255, 68, 0) 0.5rem 0px 0px, rgb(255, 68, 0) -0.5rem 0px 0px\",\n              // backgroundColor: \"rgb(255, 68, 0)\",\n              color: 'white',\n              lineHeight: '1',\n              padding: '0.25em',\n            }}>\n            {subheading}\n          </h3>\n        </div>\n      </div>\n      <section className=\"section section--gradient\">\n        <div className=\"container\">\n          <div className=\"section\">\n            <div className=\"columns\">\n              <div className=\"column is-10 is-offset-1\">\n                <div className=\"content\">\n                  <div className=\"content\">\n                    <div className=\"tile\">\n                      <h1 className=\"title\">{mainpitch.title}</h1>\n                    </div>\n                    <div className=\"tile\">\n                      <h3 className=\"subtitle\">{mainpitch.description}</h3>\n                    </div>\n                  </div>\n                  <div className=\"columns\">\n                    <div className=\"column is-12\">\n                      <h3 className=\"has-text-weight-semibold is-size-2\">{heading}</h3>\n                      <HTMLContent content={htmlContent} />\n                    </div>\n                  </div>\n                  {intro.blurbs && <Features gridItems={intro.blurbs} />}\n                  <div className=\"columns\">\n                    <div className=\"column is-12 has-text-centered\">\n                      <Link className=\"btn\" to=\"/products\">\n                        See all products\n                      </Link>\n                    </div>\n                  </div>\n                  <div className=\"column is-12\">\n                    <h3 className=\"has-text-weight-semibold is-size-2\">Latest stories</h3>\n                    <BlogRoll />\n                    <div className=\"column is-12 has-text-centered\">\n                      <Link className=\"btn\" to=\"/blog\">\n                        Read more\n                      </Link>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n    </div>\n  );\n};\nIndexPageTemplate.propTypes = {\n  image: PropTypes.oneOfType([PropTypes.object, PropTypes.string]),\n  title: PropTypes.string,\n  heading: PropTypes.string,\n  subheading: PropTypes.string,\n  mainpitch: PropTypes.object,\n  intro: PropTypes.shape({\n    blurbs: PropTypes.array,\n  }),\n};\n\nconst IndexPage = ({ data }) => {\n  const { frontmatter, html } = data.markdownRemark;\n\n  return (\n    <Layout>\n      <IndexPageTemplate\n        image={frontmatter.image}\n        title={frontmatter.title}\n        heading={frontmatter.heading}\n        subheading={frontmatter.subheading}\n        mainpitch={frontmatter.mainpitch}\n        intro={frontmatter.intro}\n        htmlContent={html}\n      />\n    </Layout>\n  );\n};\n\nIndexPage.propTypes = {\n  data: PropTypes.shape({\n    markdownRemark: PropTypes.shape({\n      frontmatter: PropTypes.object,\n    }),\n  }),\n};\n\nexport default IndexPage;\n\nexport const pageQuery = graphql`\n  query IndexPageTemplate {\n    markdownRemark(frontmatter: { templateKey: { eq: \"index-page\" } }) {\n      html\n      frontmatter {\n        title\n        image {\n          childImageSharp {\n            fluid(maxWidth: 2048, quality: 100) {\n              ...GatsbyImageSharpFluid\n            }\n          }\n        }\n        heading\n        subheading\n        mainpitch {\n          title\n          description\n        }\n        intro {\n          # blurbs {\n          #   image {\n          #     childImageSharp {\n          #       fluid(maxWidth: 240, quality: 64) {\n          #         ...GatsbyImageSharpFluid\n          #       }\n          #     }\n          #   }\n          #   text\n          # }\n          heading\n          description\n        }\n      }\n    }\n  }\n`;\n"],"names":["BlogRoll","render","posts","this","props","data","allMarkdownRemark","edges","className","map","post","node","key","id","frontmatter","featuredpost","featuredimage","imageInfo","image","alt","title","to","fields","slug","date","excerpt","React","query","count","HTMLContent","content","dangerouslySetInnerHTML","__html","gridItems","item","text","style","width","display","SEO","description","meta","lang","site","useStaticQuery","metaDescription","siteMetadata","webURL","siteUrl","ogImage","htmlAttributes","titleTemplate","name","property","author","concat","rel","sizes","href","type","color","defaultProps","IndexPageTemplate","heading","subheading","mainpitch","intro","htmlContent","backgroundImage","childImageSharp","fluid","src","backgroundPosition","backgroundAttachment","height","lineHeight","justifyContent","alignItems","flexDirection","padding","blurbs","markdownRemark","html"],"sourceRoot":""}