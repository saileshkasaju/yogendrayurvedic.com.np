{"version":3,"file":"component---src-templates-product-page-js-d23f089c6b4efddccf56.js","mappings":"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","sources":["webpack://gatsby-starter-netlify-cms/./src/components/Features.js","webpack://gatsby-starter-netlify-cms/./src/components/seo.js","webpack://gatsby-starter-netlify-cms/./node_modules/uuid/dist/esm-browser/rng.js","webpack://gatsby-starter-netlify-cms/./node_modules/uuid/dist/esm-browser/regex.js","webpack://gatsby-starter-netlify-cms/./node_modules/uuid/dist/esm-browser/stringify.js","webpack://gatsby-starter-netlify-cms/./node_modules/uuid/dist/esm-browser/validate.js","webpack://gatsby-starter-netlify-cms/./node_modules/uuid/dist/esm-browser/v4.js","webpack://gatsby-starter-netlify-cms/./src/components/Testimonials.js","webpack://gatsby-starter-netlify-cms/./src/components/Pricing.js","webpack://gatsby-starter-netlify-cms/./src/templates/product-page.js"],"sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport PreviewCompatibleImage from '../components/PreviewCompatibleImage'\n\nconst FeatureGrid = ({ gridItems }) => (\n  <div className=\"columns is-multiline\">\n    {gridItems.map(item => (\n      <div key={item.text} className=\"column is-6\">\n        <section className=\"section\">\n          <div className=\"has-text-centered\">\n            <div\n              style={{\n                width: '240px',\n                display: 'inline-block',\n              }}\n            >\n              <PreviewCompatibleImage imageInfo={item} />\n            </div>\n          </div>\n          <p>{item.text}</p>\n        </section>\n      </div>\n    ))}\n  </div>\n)\n\nFeatureGrid.propTypes = {\n  gridItems: PropTypes.arrayOf(\n    PropTypes.shape({\n      image: PropTypes.oneOfType([PropTypes.object, PropTypes.string]),\n      text: PropTypes.string,\n    })\n  ),\n}\n\nexport default FeatureGrid\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Helmet from 'react-helmet';\nimport { useStaticQuery, graphql } from 'gatsby';\n\nfunction SEO({ description, meta, title, image, lang }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n            siteUrl\n          }\n        }\n      }\n    `,\n  );\n\n  const metaDescription = description || site.siteMetadata.description;\n  // const webURL = withPrefix('/');\n  const webURL = site.siteMetadata.siteUrl;\n  const ogImage = `${webURL}${image || '/img/og-image.jpg'}`;\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        // fix html lang attribute\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          name: 'theme-color',\n          content: '#58B856',\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: 'og:type',\n          content: 'business.business',\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:image`,\n          content: ogImage,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary_large_image`,\n        },\n        {\n          name: `twitter:image:src`,\n          content: ogImage,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta)}>\n      <link rel=\"apple-touch-icon\" sizes=\"180x180\" href={`${webURL}/img/apple-touch-icon.png`} />\n      <link rel=\"icon\" type=\"image/png\" href={`${webURL}/img/favicon-32x32.png`} sizes=\"32x32\" />\n      <link rel=\"icon\" type=\"image/png\" href={`${webURL}/img/favicon-16x16.png`} sizes=\"16x16\" />\n      <link rel=\"mask-icon\" href={`${webURL}/img/safari-pinned-tab.svg`} color=\"#ff4400\" />\n    </Helmet>\n  );\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``,\n};\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n};\n\nexport default SEO;\n","// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nvar getRandomValues;\nvar rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation. Also,\n    // find the complete implementation of crypto (msCrypto) on IE11.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || typeof msCrypto !== 'undefined' && typeof msCrypto.getRandomValues === 'function' && msCrypto.getRandomValues.bind(msCrypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}","export default /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nvar byteToHex = [];\n\nfor (var i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).substr(1));\n}\n\nfunction stringify(arr) {\n  var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0; // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n\n  var uuid = (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase(); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","import REGEX from './regex.js';\n\nfunction validate(uuid) {\n  return typeof uuid === 'string' && REGEX.test(uuid);\n}\n\nexport default validate;","import rng from './rng.js';\nimport stringify from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  options = options || {};\n  var rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (var i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return stringify(rnds);\n}\n\nexport default v4;","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { v4 } from 'uuid'\n\nconst Testimonials = ({ testimonials }) => (\n  <div>\n    {testimonials.map(testimonial => (\n      <article key={v4()} className=\"message\">\n        <div className=\"message-body\">\n          {testimonial.quote}\n          <br />\n          <cite> – {testimonial.author}</cite>\n        </div>\n      </article>\n    ))}\n  </div>\n)\n\nTestimonials.propTypes = {\n  testimonials: PropTypes.arrayOf(\n    PropTypes.shape({\n      quote: PropTypes.string,\n      author: PropTypes.string,\n    })\n  ),\n}\n\nexport default Testimonials\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst Pricing = ({ data }) => (\n  <div className=\"columns\">\n    {data.map(price => (\n      <div key={price.plan} className=\"column\">\n        <section className=\"section\">\n          <h4 className=\"has-text-centered has-text-weight-semibold\">\n            {price.plan}\n          </h4>\n          <h2 className=\"is-size-1 has-text-weight-bold has-text-primary has-text-centered\">\n            ${price.price}\n          </h2>\n          <p className=\"has-text-weight-semibold\">{price.description}</p>\n          <ul>\n            {price.items.map(item => (\n              <li key={item} className=\"is-size-5\">\n                {item}\n              </li>\n            ))}\n          </ul>\n        </section>\n      </div>\n    ))}\n  </div>\n)\n\nPricing.propTypes = {\n  data: PropTypes.arrayOf(\n    PropTypes.shape({\n      plan: PropTypes.string,\n      price: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n      description: PropTypes.string,\n      items: PropTypes.array,\n    })\n  ),\n}\n\nexport default Pricing\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { graphql } from 'gatsby';\nimport Layout from '../components/Layout';\nimport Features from '../components/Features';\nimport Testimonials from '../components/Testimonials';\nimport Pricing from '../components/Pricing';\nimport PreviewCompatibleImage from '../components/PreviewCompatibleImage';\nimport SEO from '../components/seo';\n\nexport const ProductPageTemplate = ({\n  image,\n  title,\n  heading,\n  description,\n  intro,\n  main,\n  testimonials,\n  fullImage,\n  pricing,\n}) => (\n  <div className=\"content\">\n    <div\n      className=\"full-width-image-container margin-top-0\"\n      style={{\n        backgroundImage: `url(${\n          !!image.childImageSharp ? image.childImageSharp.fluid.src : image\n        })`,\n      }}>\n      <h2\n        className=\"has-text-weight-bold is-size-1\"\n        style={{\n          // boxShadow: '0.5rem 0 0 #f40, -0.5rem 0 0 #f40',\n          // backgroundColor: '#f40',\n          color: 'white',\n          padding: '1rem',\n        }}>\n        {title}\n      </h2>\n    </div>\n    <section className=\"section section--gradient\">\n      <div className=\"container\">\n        <div className=\"section\">\n          <div className=\"columns\">\n            <div className=\"column is-7 is-offset-1\">\n              <h3 className=\"has-text-weight-semibold is-size-2\">{heading}</h3>\n              <p>{description}</p>\n            </div>\n          </div>\n          <div className=\"columns\">\n            <div className=\"column is-10 is-offset-1\">\n              {intro.blurbs && <Features gridItems={intro.blurbs} />}\n              <div className=\"columns\">\n                <div className=\"column is-7\">\n                  <h3 className=\"has-text-weight-semibold is-size-3\">{main.heading}</h3>\n                  <p>{main.description}</p>\n                </div>\n              </div>\n              <div className=\"tile is-ancestor\">\n                <div className=\"tile is-vertical\">\n                  <div className=\"tile\">\n                    <div className=\"tile is-parent is-vertical\">\n                      <article className=\"tile is-child\">\n                        <PreviewCompatibleImage imageInfo={main.image1} />\n                      </article>\n                    </div>\n                    <div className=\"tile is-parent\">\n                      <article className=\"tile is-child\">\n                        <PreviewCompatibleImage imageInfo={main.image2} />\n                      </article>\n                    </div>\n                  </div>\n                  <div className=\"tile is-parent\">\n                    <article className=\"tile is-child\">\n                      <PreviewCompatibleImage imageInfo={main.image3} />\n                    </article>\n                  </div>\n                </div>\n              </div>\n              {testimonials && <Testimonials testimonials={testimonials} />}\n              <div\n                className=\"full-width-image-container\"\n                style={{\n                  backgroundImage: `url(${\n                    fullImage.childImageSharp ? fullImage.childImageSharp.fluid.src : fullImage\n                  })`,\n                }}\n              />\n              <h2 className=\"has-text-weight-semibold is-size-2\">{pricing.heading}</h2>\n              <p className=\"is-size-5\">{pricing.description}</p>\n              {pricing.plans && <Pricing data={pricing.plans} />}\n            </div>\n          </div>\n        </div>\n      </div>\n    </section>\n  </div>\n);\n\nProductPageTemplate.propTypes = {\n  image: PropTypes.oneOfType([PropTypes.object, PropTypes.string]),\n  title: PropTypes.string,\n  heading: PropTypes.string,\n  description: PropTypes.string,\n  intro: PropTypes.shape({\n    blurbs: PropTypes.array,\n  }),\n  main: PropTypes.shape({\n    heading: PropTypes.string,\n    description: PropTypes.string,\n    image1: PropTypes.oneOfType([PropTypes.object, PropTypes.string]),\n    image2: PropTypes.oneOfType([PropTypes.object, PropTypes.string]),\n    image3: PropTypes.oneOfType([PropTypes.object, PropTypes.string]),\n  }),\n  testimonials: PropTypes.array,\n  fullImage: PropTypes.oneOfType([PropTypes.object, PropTypes.string]),\n  pricing: PropTypes.shape({\n    heading: PropTypes.string,\n    description: PropTypes.string,\n    plans: PropTypes.array,\n  }),\n};\n\nconst ProductPage = ({ data }) => {\n  const { frontmatter } = data.markdownRemark;\n\n  return (\n    <Layout>\n      <SEO\n        title={frontmatter.title}\n        image={frontmatter.image}\n        description={frontmatter.description}\n      />\n      <ProductPageTemplate\n        image={frontmatter.image}\n        title={frontmatter.title}\n        heading={frontmatter.heading}\n        description={frontmatter.description}\n        intro={frontmatter.intro}\n        main={frontmatter.main}\n        testimonials={frontmatter.testimonials}\n        fullImage={frontmatter.full_image}\n        pricing={frontmatter.pricing}\n      />\n    </Layout>\n  );\n};\n\nProductPage.propTypes = {\n  data: PropTypes.shape({\n    markdownRemark: PropTypes.shape({\n      frontmatter: PropTypes.object,\n    }),\n  }),\n};\n\nexport default ProductPage;\n\nexport const productPageQuery = graphql`\n  query ProductPage($id: String!) {\n    markdownRemark(id: { eq: $id }) {\n      frontmatter {\n        title\n        image {\n          childImageSharp {\n            fluid(maxWidth: 2048, quality: 100) {\n              ...GatsbyImageSharpFluid\n            }\n          }\n        }\n        heading\n        description\n        intro {\n          # blurbs {\n          #   image {\n          #     childImageSharp {\n          #       fluid(maxWidth: 240, quality: 64) {\n          #         ...GatsbyImageSharpFluid\n          #       }\n          #     }\n          #   }\n          #   text\n          # }\n          heading\n          description\n        }\n        main {\n          heading\n          description\n          image1 {\n            alt\n            image {\n              childImageSharp {\n                fluid(maxWidth: 526, quality: 92) {\n                  ...GatsbyImageSharpFluid\n                }\n              }\n            }\n          }\n          image2 {\n            alt\n            image {\n              childImageSharp {\n                fluid(maxWidth: 526, quality: 92) {\n                  ...GatsbyImageSharpFluid\n                }\n              }\n            }\n          }\n          image3 {\n            alt\n            image {\n              childImageSharp {\n                fluid(maxWidth: 1075, quality: 72) {\n                  ...GatsbyImageSharpFluid\n                }\n              }\n            }\n          }\n        }\n        # testimonials {\n        #   author\n        #   quote\n        # }\n        full_image {\n          childImageSharp {\n            fluid(maxWidth: 2048, quality: 100) {\n              ...GatsbyImageSharpFluid\n            }\n          }\n        }\n        pricing {\n          heading\n          description\n          # plans {\n          #   description\n          #   items\n          #   plan\n          #   price\n          # }\n        }\n      }\n    }\n  }\n`;\n"],"names":["gridItems","className","map","item","key","text","style","width","display","imageInfo","SEO","description","meta","title","image","lang","site","useStaticQuery","metaDescription","siteMetadata","webURL","siteUrl","ogImage","htmlAttributes","titleTemplate","name","content","property","author","concat","rel","sizes","href","type","color","defaultProps","getRandomValues","rnds8","Uint8Array","rng","crypto","bind","msCrypto","Error","uuid","byteToHex","i","push","toString","substr","arr","offset","arguments","length","undefined","toLowerCase","TypeError","options","buf","rnds","random","testimonials","testimonial","v4","quote","data","price","plan","items","ProductPageTemplate","heading","intro","main","fullImage","pricing","backgroundImage","childImageSharp","fluid","src","padding","blurbs","Features","PreviewCompatibleImage","image1","image2","image3","plans","frontmatter","markdownRemark","Layout","full_image"],"sourceRoot":""}